<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_RobotArm" Id="{791aebaa-e1af-4e34-82e6-21b6dcafec81}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_RobotArm
VAR
	Inputs 	AT%I* 	: ST_Inputs;
	Outputs AT%Q* 	: ST_Outputs;
	RobotArmJoints 	: ARRAY [1..GVL_RobotArm.NUMBER_OF_JOINTS] OF INT;
	Index 			: INT;
	//BoxPlaceLocation	: ARRAY [E_BoxPlaceDirection.PLACE1..E_BoxPlaceDirection.LastPlace] OF INT;
	InputsDecoupled		: ST_Inputs;
END_VAR

VAR PERSISTENT
	LSTEPS			: INT := 0;
	RSTEPS			: INT := 0;
	FirstScan 		: BOOL := TRUE;	
	JointTurnStep	: INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[_M_StatusUpdate();


(*
	WRITE PUBLIC METHODS TO DO THE FOLLOWING:
	MOVE ONLY
		1. Move hand to Place #1
		2. Move hand to Place #2
		
	MOVE + GRIP																//Why did you decide to ad Move in the method?
		3. PickUpFromPlace( placenum := x )
		4. PlaceTo( placenum := x )

*)

]]></ST>
    </Implementation>
    <Folder Name="Private" Id="{8e206af4-6c72-4040-98dd-746c939058b7}" />
    <Method Name="_M_DefaultPosition" Id="{b4076654-83fc-4691-b1b5-978eda6f60b7}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE _M_DefaultPosition : BOOL
VAR
	Index		: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_M_GripControl( Close := TRUE ); // METHOD( INPUT := , OUTPUT => )
	
FOR Index := 1 TO GVL_RobotArm.NUMBER_OF_JOINTS DO 
	Outputs.JOINT_TURN_LEFT[Index]	:=	FALSE;
	Outputs.JOINT_TURN_RIGHT[Index]	:=	FALSE;//optimisation of//inputs.JOINT_TURN_RIGHT1:=inputs.JOINT_TURN_RIGHT2:=inputs.JOINT_TURN_RIGHT3:=inputs.JOINT_TURN_RIGHT4:=FALSE;
	LSTEPS:=RSTEPS:=0; 
END_FOR

]]></ST>
      </Implementation>
    </Method>
    <Method Name="_M_GripControl" Id="{4500713e-daab-4b5f-93b1-f1dfd3fbfba4}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE _M_GripControl : BOOL
VAR_INPUT
	Close	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Outputs.GRIP_CLOSE := Close;
Outputs.GRIP_OPEN := NOT Close;

		]]></ST>
      </Implementation>
    </Method>
    <Method Name="_M_StatusUpdate" Id="{424b32d3-2991-4e75-a053-29a008bea2c1}">
      <Declaration><![CDATA[METHOD PRIVATE _M_StatusUpdate : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[InputsDecoupled.GRIP_CONDITION := Inputs.GRIP_CONDITION; 

FOR Index := 1 TO GVL_RobotArm.NUMBER_OF_JOINTS DO
	InputsDecoupled.JOINT_LEFT_SIGNAL[Index] := Inputs.JOINT_LEFT_SIGNAL[Index];
	InputsDecoupled.JOINT_RIGHT_SIGNAL[Index] := Inputs.JOINT_RIGHT_SIGNAL[Index];
	InputsDecoupled.JOINT_STRAIGHT_SIGNAL[Index] := Inputs.JOINT_STRAIGHT_SIGNAL[Index];
END_FOR

InputsDecoupled.PLACE1 := Inputs.PLACE1;
InputsDecoupled.PLACE2 := Inputs.PLACE2;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_M_StraightJoint" Id="{3a826016-47df-4ee5-b177-5499df6b2db5}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE _M_StraightJoint : BOOL
VAR
	Joint				: INT :=1;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Outputs.GRIP_CLOSE:=TRUE;

Outputs.JOINT_TURN_LEFT[Joint] := FALSE;
Outputs.JOINT_TURN_RIGHT[Joint] := FALSE;

//FOR Index := 1 TO GVL_RobotArm.NUMBER_OF_JOINTS BY 1 DO
//	Outputs.JOINT_TURN_LEFT	[Index]:=FALSE;
//	Outputs.JOINT_TURN_RIGHT_RIGHT	[Index]:=FALSE;
//END_FOR

(* CASE StraightPosition OF 
1:	inputs.JOINT_TURN_LEFT1:=FALSE;
	inputs.JOINT_TURN_RIGHT1:=FALSE;
2: 	inputs.JOINT_TURN_LEFT2:=FALSE;
	inputs.JOINT_TURN_RIGHT2:=FALSE;
3: 	inputs.JOINT_TURN_LEFT3:=FALSE;
	inputs.JOINT_TURN_RIGHT3:=FALSE;
4: 	inputs.JOINT_TURN_LEFT4:=FALSE;
	inputs.JOINT_TURN_RIGHT4:=FALSE;	
END_CASE *)]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_MoveToPlace1" Id="{7a23719a-1aae-4640-a5ff-01800871be7e}">
      <Declaration><![CDATA[METHOD PUBLIC M_MoveToPlace1 : BOOL
VAR	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[

//Inputs.GRIP_CONDITION := FALSE;

//M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := Index); (*Not clear how use enumeration / for example, can I write  - E_RobotArmJointDirection.1*)
//M_TurnJoint (TurnDirection := E_BoxPlaceDirection.PLACE1 , E_RobotArmJointDirection.LEFT); // which line is correct in that case?

//FOR Index := 1 TO GVL_RobotArm.NUMBER_OF_JOINTS DO
//	M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := Index );
//END_FOR
_M_DefaultPosition();
CASE JointTurnStep OF
	1:
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_LEFT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 2;
		END_IF
	2: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_LEFT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 3;
		END_IF
	3: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_LEFT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 0;
		END_IF
END_CASE




(*

	1. Return to default position 
	2. Move hand to Place 1
	3. Open Grip 
	...
	optionally: return to default position BUT returning to default must be performed ONLY IF GRIP_CONDITION EMPTY


_M_DefaultPosition(Default:=TRUE);
M_TurnJoint(TurnDirection:='LEFT');
outputs.GRIP_OPEN:=FALSE;

IF Inputs.GRIP_CONDITION THEN
	inputs.GRIP_CONDITION:=FALSE;
 _M_DefaultPosition(Default:=TRUE);

END_IF
*)

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_MoveToPlace2" Id="{0e169f60-7ed8-4039-bfcf-3f2af81e03a2}">
      <Declaration><![CDATA[METHOD PUBLIC M_MoveToPlace2 : BOOL
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CASE JointTurnStep OF
	1:
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.RIGHT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_RIGHT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 2;
		END_IF
	2: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.RIGHT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_RIGHT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 3;
		END_IF
	3: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.RIGHT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_RIGHT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 0;
		END_IF
END_CASE





(*

	1. Return to default position 
	2. Move hand to Place 2
	3. Open Grip
	...
	optionally: return to default position BUT returning to default must be performed ONLY IF GRIP_CONDITION EMPTY

*)

//_M_DefaultPosition(Default:=TRUE);
//M_TurnJoint(TurnDirection:='RIGHT');
//outputs.GRIP_OPEN:=TRUE;

//IF outputs.GRIP_OPEN THEN
//	inputs.GRIP_CONDITION:=FALSE;
// _M_DefaultPosition(Default:=TRUE);

//END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PickUpFromThePlace" Id="{bb47bc22-22d9-491b-a40c-674ad464a234}">
      <Declaration><![CDATA[METHOD PUBLIC M_PickUpFromThePlace : BOOL
VAR_INPUT
	PLACE_NUM : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*

	1. Return to default position 
	2. Move hand to Place 1
	3. Open Grip
	4. Close Grip when picked up (picked up => GRIP_CONDITION = TRUE)
	...
	optionally: return to default position

*)

CASE PLACE_NUM OF
	
	1: //IF  place1 NOT empty
	IF InputsDecoupled.PLACE1 THEN
		_M_DefaultPosition();		
		M_MoveToPlace1();
		_M_GripControl( Close :=	 TRUE );
	END_IF	
	2: // //IF  place2 empty
	IF InputsDecoupled.PLACE2 THEN
		_M_DefaultPosition();		
		M_MoveToPlace2();
		_M_GripControl( Close :=	 TRUE );
	END_IF
END_CASE

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PlaceTo" Id="{9e7cd9ea-bfbb-4743-ac1e-c348e4a0ec1b}">
      <Declaration><![CDATA[METHOD PUBLIC M_PlaceTo : BOOL
VAR_INPUT
	PLACE_NUM : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*

	1. Return to default position 
	2. Move hand to Place 2
	3. Open Grip
	4. Close Grip when picked up (picked up => GRIP_CONDITION = TRUE)
	...
	optionally: return to default position

*)

CASE PLACE_NUM OF
	1://IF  place1 empty
	IF InputsDecoupled.PLACE1 = FALSE THEN
		_M_DefaultPosition();
		M_MoveToPlace1();	
		_M_GripControl( Close :=	FALSE );
	END_IF	
	2://IF  place2 empty
	IF InputsDecoupled.PLACE2 = FALSE THEN
		_M_DefaultPosition();
		M_MoveToPlace2();
		_M_GripControl( Close :=	FALSE );
	END_IF
END_CASE




//_M_DefaultPosition(Default:=TRUE);
//M_TurnJoint(TurnDirection:='RIGHT');
//IF inputs.GRIP_CONDITION THEN
//	outputs.GRIP_OPEN		:=TRUE;
//	inputs.PLACE2			:=FALSE;
//ELSIF inputs.GRIP_CONDITION:=FALSE THEN
//	_M_DefaultPosition(Default:=TRUE);
//END_IF


]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_TurnJoint" Id="{215986a3-b2d9-4a5b-a2c6-326f10567f86}">
      <Declaration><![CDATA[METHOD PUBLIC M_TurnJoint : BOOL
VAR_INPUT
	TurnDirection 	: INT; // left / right | straght
	Joint			: INT; // 1..GVL_RobotArm.MAX_JOINT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//_M_StraightJoint(); // Is it correct line?
CASE TurnDirection OF 
	E_RobotArmJointDirection.LEFT:// turn left  // ( Style of writing?)
		Outputs.JOINT_TURN_LEFT[Joint] := TRUE;
	E_RobotArmJointDirection.RIGHT: // turn right
		Outputs.JOINT_TURN_RIGHT[Joint] := TRUE;
	E_RobotArmJointDirection.STRAIGHT:// straight position  
		Outputs.JOINT_TURN_LEFT[Joint] := FALSE;
		Outputs.JOINT_TURN_RIGHT[Joint] := FALSE;
		Outputs.JOINT_STRAIGHT[Joint] := TRUE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ZIGZAG" Id="{3f55f078-3d00-49e8-aec7-9d26645ce0ba}">
      <Declaration><![CDATA[METHOD PUBLIC M_ZIGZAG : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_M_DefaultPosition();
CASE JointTurnStep OF
	1:
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.LEFT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_LEFT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 2;
		END_IF
	2: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.RIGHT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_RIGHT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 3;
		END_IF
	3: 
		M_TurnJoint( TurnDirection := E_RobotArmJointDirection.STRAIGHT, Joint := JointTurnStep );
		IF InputsDecoupled.JOINT_STRAIGHT_SIGNAL[JointTurnStep] THEN
			JointTurnStep := 0;
		END_IF
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_RobotArm">
      <LineId Id="71" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="101" Count="1" />
      <LineId Id="106" Count="1" />
      <LineId Id="103" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm._M_DefaultPosition">
      <LineId Id="28" Count="0" />
      <LineId Id="46" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="38" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm._M_GripControl">
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm._M_StatusUpdate">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="16" Count="1" />
    </LineIds>
    <LineIds Name="FB_RobotArm._M_StraightJoint">
      <LineId Id="30" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="39" Count="8" />
      <LineId Id="38" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_MoveToPlace1">
      <LineId Id="64" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="89" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="94" Count="5" />
      <LineId Id="101" Count="2" />
      <LineId Id="100" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="107" Count="2" />
      <LineId Id="106" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="12" Count="4" />
      <LineId Id="18" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_MoveToPlace2">
      <LineId Id="40" Count="0" />
      <LineId Id="47" Count="15" />
      <LineId Id="41" Count="5" />
      <LineId Id="15" Count="7" />
      <LineId Id="5" Count="0" />
      <LineId Id="24" Count="8" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_PickUpFromThePlace">
      <LineId Id="46" Count="9" />
      <LineId Id="102" Count="1" />
      <LineId Id="121" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="108" Count="1" />
      <LineId Id="105" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="24" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_PlaceTo">
      <LineId Id="9" Count="8" />
      <LineId Id="5" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="70" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="53" Count="2" />
      <LineId Id="51" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="44" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_TurnJoint">
      <LineId Id="165" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="155" Count="1" />
      <LineId Id="171" Count="3" />
      <LineId Id="153" Count="0" />
    </LineIds>
    <LineIds Name="FB_RobotArm.M_ZIGZAG">
      <LineId Id="6" Count="16" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>